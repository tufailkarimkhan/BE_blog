services:
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins-lts-server
    restart: unless-stopped
    ports:
      - "9090:8080" # Jenkins Web UI
      - "50000:50000" # Jenkins Agent communication
    volumes:
      - jenkins_data:/var/jenkins_home # Persists Jenkins data
      - /var/run/docker.sock:/var/run/docker.sock # Allows Jenkins to use host Docker
      # - ./jenkins-casc-config:/var/jenkins_home/casc_configs # Example for JCasC plugin
    environment: {} # <-- FIX: Explicitly define as an empty mapping
    # You can keep these commented lines below for reference if you wish.
    # JENKINS_OPTS: "--prefix=/jenkins" # If you want Jenkins on a subpath
    # JAVA_OPTS: "-Djenkins.install.runSetupWizard=false" # To skip setup wizard if using JCasC or init scripts
    # CASC_JENKINS_CONFIG: "/var/jenkins_home/casc_configs" # If using JCasC
    networks:
      - jenkins-network

  # Optional: A reverse proxy like Nginx or Traefik for Jenkins (for SSL, custom domain, etc.)
  # nginx_jenkins_proxy:
  #   image: nginx:alpine
  #   container_name: jenkins-nginx-proxy
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/certs:/etc/nginx/certs:ro
  #   depends_on:
  #     - jenkins
  #   networks:
  #     - jenkins-network

volumes:
  jenkins_data: # Defines the named volume for persistence

networks:
  jenkins-network:
    driver: bridge